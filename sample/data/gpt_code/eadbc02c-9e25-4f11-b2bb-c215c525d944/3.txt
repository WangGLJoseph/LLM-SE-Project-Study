#include "TableRow.h"

// Implementation of TableRow
TableRow::TableRow(const vector<shared_ptr<Entity>> &values) : values(values) {}

const vector<shared_ptr<Entity>> &TableRow::getValues() const {
    return values;
}

bool TableRow::operator==(const TableRow &other) const {
    if (values.size() != other.values.size()) {
        return false;
    }
    for (size_t i = 0; i < values.size(); ++i) {
        if (
                values[i]->getName() != other.values[i]->getName() ||
                values[i]->getType() != other.values[i]->getType()
                ) {
            return false;
        }
    }
    return true;
}

string TableRow::toString() const {
    ostringstream oss;
    for (auto it = values.begin(); it != values.end(); ++it) {
        if (it != values.begin()) {
            oss << " "; // Add space before all but the first entity's name
        }
        oss << (*it)->getName(); // Dereference the iterator and shared_ptr to call getName
    }
    return oss.str();
}
