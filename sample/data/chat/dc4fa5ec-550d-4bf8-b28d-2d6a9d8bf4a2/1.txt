bool SynonymValues::operator==(const SynonymValues &rhs) const {
    // First, check if the synonyms are different
    if (synonym != rhs.synonym) {
        return false;
    }

    // No need to sort the original vectors if they are of different sizes
    if (values.size() != rhs.values.size()) {
        return false;
    }

    // Sort a copy of the vectors based on the names of the entities
    auto sortedValues = values; // Make a copy to sort
    auto sortedRhsValues = rhs.values; // Make a copy to sort

    std::sort(sortedValues.begin(), sortedValues.end(),
              [](const std::shared_ptr<Entity>& a, const std::shared_ptr<Entity>& b) {
                  return a->getName() < b->getName();
              });

    std::sort(sortedRhsValues.begin(), sortedRhsValues.end(),
              [](const std::shared_ptr<Entity>& a, const std::shared_ptr<Entity>& b) {
                  return a->getName() < b->getName();
              });

    // Now that both are sorted, compare element by element
    for (size_t i = 0; i < sortedValues.size(); ++i) {
        if (!(sortedValues[i]->getName() == sortedRhsValues[i]->getName())) {
            return false;
        }
    }
    return true;
}
